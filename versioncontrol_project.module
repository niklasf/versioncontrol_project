<?php
// $Id$
/**
 * @file
 * Version Control / Project Node integration - Integrates project nodes
 * (provided by the Project module) with version control systems supported
 * by the Version Control API.
 *
 * Copyright 2006, 2007, 2009 by Derek Wright ("dww", http://drupal.org/user/46549)
 * Copyright 2007, 2008, 2009 by Jakob Petsovits ("jpetso", http://drupal.org/user/56020)
 */

/**
 * Implementation of hook_menu().
 */
function versioncontrol_project_menu() {
  $items = array();

  return $items;
}

/**
 * Implementation of hook_nodeapi().
 */
function versioncontrol_project_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if ($node->type == 'project_project') {
    switch ($op) {
      case 'load':
        versioncontrol_project_project_load($node);
        break;
      case 'insert':
        versioncontrol_project_project_insert($node);
        break;
      case 'delete':
        versioncontrol_project_project_delete($node);
        break;
    }
  }
}

/**
 * Load versioncontrol_project fields into project node object.
 */
function versioncontrol_project_project_load(&$node) {
  $result = db_fetch_object(db_query('SELECT * FROM {versioncontrol_project_projects} WHERE nid = %d', $node->nid));
  $fields = array('repo_id');
    foreach ($fields as $field) {
      $node->versioncontrol_project[$field] = $result->$field;
    }
  if ($result) {
    $node->versioncontrol_project['repo'] = versioncontrol_project_repository_load($node->nid);
  }
}

/**
 * Save versioncontrol_project information when a new project is created. 
 */
function versioncontrol_project_project_insert(&$node) {
  db_query("INSERT INTO {versioncontrol_project_projects} (nid, repo_id) VALUES (%d, %d)", $node->nid, 0);
}

/**
 * Delete versioncontrol_project information when a new project is deleted.
 */
function versioncontrol_project_project_delete(&$node) {
  db_query("DELETE FROM {versioncontrol_project_projects} WHERE nid = %d", $node->nid);
}

/**
 * Update or add repo associated with a given project.
 *
 * @param $project_id
 *   Node ID of the project.
 * @param $repo_id
 *   The repo ID of the versioncontrol repo to associate.
 */
function versioncontrol_project_set_project($project_id, $repo_id) {
  db_query("UPDATE {versioncontrol_project_projects} SET repo_id = %d WHERE nid = %d", $repo_id, $project_id);
  if (!db_affected_rows()) {
    // Didn't update anything, add this as a new project.
    db_query("INSERT INTO {versioncontrol_project_projects} (nid, repo_id) VALUES (%d, %d)", $project_id, $repo_id);
  }
}

/**
 * Load the repository object associated with a project.
 */
function versioncontrol_project_repository_load($project_id) {
  $repo_id = db_result(db_query("SELECT repo_id FROM {versioncontrol_project_projects} WHERE nid = %d", $project_id));
  $repository = versioncontrol_repository_load_multiple(array($repo_id));
  return empty($repository) ? FALSE : reset($repository);
}



