<?php
// $Id$
/**
 * @file
 * Version Control / Project Node Integration - Integrates nodes of any content
 * type with version control systems supported by the Version Control API.
 *
 * Copyright 2006 by Karthik ("Zen", http://drupal.org/user/21209)
 * Copyright 2006, 2007 by Derek Wright ("dww", http://drupal.org/user/46549)
 * Copyright 2007 by Jakob Petsovits ("jpetso", http://drupal.org/user/56020)
 */

/**
 * Implementation of hook_install().
 */
function versioncontrol_project_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysqli':
    case 'mysql':
      db_query("CREATE TABLE {versioncontrol_project_projects} (
        nid int unsigned NOT NULL default 0,
        repo_id int unsigned NOT NULL default 0,
        directory varchar(255) NOT NULL default '',
        PRIMARY KEY (nid),
        KEY repo_id_directory (repo_id, directory)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */");

      db_query("CREATE TABLE {versioncontrol_project_comaintainers} (
        nid int unsigned NOT NULL default 0,
        uid int unsigned NOT NULL default 0,
        PRIMARY KEY (nid, uid)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */");
      break;

    case 'pgsql':
      db_query("CREATE TABLE {versioncontrol_project_projects} (
        nid int NOT NULL default 0,
        repo_id int NOT NULL default 0,
        directory varchar(255) NOT NULL default '',
        PRIMARY KEY (nid)
      )");
      db_query("CREATE INDEX {versioncontrol_project_projects}_repo_id_directory_idx
                ON {versioncontrol_project_projects} (repo_id, directory)");

      db_query("CREATE TABLE {versioncontrol_project_comaintainers} (
        nid int NOT NULL default 0,
        uid int NOT NULL default 0,
        PRIMARY KEY (nid, uid)
      )");
      break;
  }
}


/**
 * Implementation of hook_uninstall().
 */
function versioncontrol_project_uninstall() {
  // Remove variables.
  db_query("DELETE FROM {variable} WHERE name LIKE 'versioncontrol_project_directory_tid_%'");
  $variables = array(
    'versioncontrol_project_content_types',
    'versioncontrol_project_restrict_commits',
    'versioncontrol_project_restrict_creation',
    'versioncontrol_project_dir_validate_by_type',
    'versioncontrol_project_validate_by_short_name',
  );
  foreach ($variables as $variable) {
    variable_del($variable);
  }

  // Drop tables.
  db_query('DROP TABLE {versioncontrol_project_projects}');
  db_query('DROP TABLE {versioncontrol_project_comaintainers}');
}


// Update functions.

function versioncontrol_project_update_1() {
  $ret = array();

  // Remove the unique key (repo_id, directory) because there can be multiple
  // "empty" projects with keys (0, ''). Instead, have a non-unique index.
  switch ($GLOBALS['db_type']) {
    case 'mysqli':
    case 'mysql':
      $ret[] = update_sql('ALTER TABLE {versioncontrol_project_projects}
                           DROP KEY repo_id');
      $ret[] = update_sql('ALTER TABLE {versioncontrol_project_projects}
                           ADD KEY repo_id_directory (repo_id, directory)');
      break;
    case 'pgsql':
      $ret[] = update_sql('ALTER TABLE {versioncontrol_project_projects}
                           DROP CONSTRAINT {versioncontrol_project_projects}_repo_id_key');
      $ret[] = update_sql('CREATE INDEX {versioncontrol_project_projects}_repo_id_directory_idx
                           ON {versioncontrol_project_projects} (repo_id, directory)');
      break;
  }
  return $ret;
}

function versioncontrol_project_update_2() {
  $ret = array();

  // Remove the owner_uid column.
  $ret[] = update_sql('ALTER TABLE {versioncontrol_project_projects} DROP COLUMN owner_uid');
  return $ret;
}
